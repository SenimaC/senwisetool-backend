// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  DEVELOPER
  OWNER
  PDG
  DG
  ADG
  ASSISTANT
}

enum AssistantRole {
  MENDATAIRE
  AGENT
  INSPECTOR
  TRAINER
}

enum UserStatus {
  REGISTERED
  ACTIVE
  DISABLED
  DELETED
  BANNED
}

model User {
  id                         String   @id @default(cuid())
  email                      String   @unique
  password                   String
  firstName                  String
  lastName                   String
  role                       UserRole @default(DG)
  createdAt                  DateTime @default(now())
  isEmailVerified            Boolean  @default(false)

  codeVerificationProcess    Boolean     @default(false)
  codeVerification           String?
  codeVerificationExpires    DateTime?

  refreshToken               String?
  status                     UserStatus @default(REGISTERED)

  Company                    Company?
}

enum CompanyStatus {
  PENDING_APPROVAL
  ACTIVE
  BLOCKED
  REJECTED
  MAINTENANCE
  CLOSE
}

model Company {
  id                         String    @id @default(cuid())
  name                       String
  description                String
  sector                     String
  logo                       String     // URL vers S3
  authorization              String     // URL vers S3

  country                    String?
  region                     String?
  city                       String?
  address                    String?

  email                      String?      @unique
  phoneNumber                String?

  isEmailVerified            Boolean     @default(false)
  emailVerificationCode      String?
  emailVerificationExpires   DateTime?

  bucketName                 String?     // Nom du bucket AWS S3
  status                     CompanyStatus @default(PENDING_APPROVAL)
  onboardingSteps            Int[]       // ex: [1, 2, 3]
  createdAt                  DateTime    @default(now())

  ownerId                    String @unique
  owner                      User        @relation(fields: [ownerId], references: [id])
}

