import {
  PrismaClient,
  RequirementChapter,
  RequirementSection,
} from '@prisma/client';

type RequirementSectionType = {
  title: string;
  description?: string;
  number: string;
};

const requirementSections: RequirementSectionType[] = [
  {
    title: 'Gestion',
    description: '',
    number: '1.1',
  },
  {
    title: 'Administration',
    description: '',
    number: '1.2',
  },
  {
    title: '√âvaluation des risques et Plan de gestion',
    description: '',
    number: '1.3',
  },
  {
    title: 'Inspection Interne et Auto-√âvaluation',
    description: '',
    number: '1.4',
  },
  {
    title: 'M√©canisme de R√©clamation',
    description: '',
    number: '1.5',
  },
  {
    title: '√âgalit√© des Genres',
    description: '',
    number: '1.6',
  },
  {
    title: 'Les donn√©es de l‚Äôindicateus',
    description: '',
    number: '1.7',
  },
  {
    title: 'Tra√ßabilit√©',
    description: '',
    number: '2.1',
  },
  {
    title: 'Tra√ßabilit√© sur la plateforme en ligne',
    description: '',
    number: '2.2',
  },
  {
    title: 'Bilan Massique',
    description: '',
    number: '2.3',
  },
  {
    title: 'Prime',
    description: '',
    number: '3.1',
  },
  {
    title: 'Plantation et Rotation',
    description: '',
    number: '4.1',
  },
  {
    title: 'Taille, √©lagage et r√©novation des plantations d‚Äôarbres',
    description: '',
    number: '4.2',
  },
  {
    title: 'Organismes G√©n√©tiquement Modifi√©s (OGM)',
    description: '',
    number: '4.3',
  },
  {
    title: 'Conservation et Fertilit√© des Sols',
    description: '',
    number: '4.4',
  },
  {
    title: 'Lutte Int√©gr√©e contre les Ravageurs (LIR)',
    description: '',
    number: '4.5',
  },
  {
    title: 'Gestion des produits agrochimiques',
    description: '',
    number: '4.6',
  },
  {
    title: 'Pratiques de R√©coltes et Post-R√©coltes',
    description: '',
    number: '4.7',
  },
  {
    title:
      '√âvaluation et R√©solution du travail des enfants, du travail forc√©, de la discrimination, de la violence et du harc√®lement sur le lieu de travail',
    description: '',
    number: '5.1',
  },
  {
    title: 'Libert√© d‚ÄôAssociation et de Convention Collective',
    description: '',
    number: '5.2',
  },
  {
    title: 'Salaires et Contrats',
    description: '',
    number: '5.3',
  },
  {
    title: 'Salaire Minimum Vital',
    description: '',
    number: '5.4',
  },
  {
    title: 'Conditions de Travail',
    description: '',
    number: '5.5',
  },
  {
    title: 'Sant√© et S√©curit√©',
    description: '',
    number: '5.6',
  },
  {
    title: 'Conditions de Vie et de Logement',
    description: '',
    number: '5.7',
  },
  {
    title: 'Communaut√©s',
    description: '',
    number: '5.8',
  },
  {
    title: 'For√™ts, autres √©cosyst√®mes naturels et aires prot√©g√©es',
    description: '',
    number: '6.1',
  },
  {
    title:
      'Conservation et Am√©lioration des √âcosyst√®mes Naturels et de la V√©g√©tation Naturelle',
    description: '',
    number: '6.2',
  },
  {
    title: 'Zones Ripariennes Tampons',
    description: '',
    number: '6.3',
  },
  {
    title: 'Protection de la Faune Sauvage et de la Biodiversit√©',
    description: '',
    number: '6.4',
  },
  {
    title: 'Conservation et Gestion de L‚ÄôEau',
    description: '',
    number: '6.5',
  },
  {
    title: 'Gestion et eaux us√©es',
    description: '',
    number: '6.6',
  },
  {
    title: 'Gestion des D√©chets',
    description: '',
    number: '6.7',
  },
  {
    title: 'Efficacit√© √ânerg√©tique',
    description: '',
    number: '6.8',
  },
];

export async function seedSections(
  prisma: PrismaClient,
  chapters: RequirementChapter[],
): Promise<RequirementSection[]> {
  console.log('üå± Seeding Requirement sections...');

  const sections = await Promise.all(
    requirementSections.map(async (section) => {
      return await prisma.requirementSection.upsert({
        where: { number: section.number },
        update: {},
        create: {
          ...section,
          chapter: {
            connect: {
              id: chapters.find(
                (chapter) =>
                  chapter.number === parseInt(section.number.split('.')[0]),
              ).id,
            },
          },
        },
      });
    }),
  );

  console.log('‚úÖ Requirements sections seeded:', sections.length);
  return sections;
}
